#!/usr/bin/env bash

# environment
#
# Copyright 2020 Andrew Countryman <apcountryman@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the specific language governing
# permissions and limitations under the License.

# File: add-ssh-connection
# Description: Add a SSH connection.

function error()
{
    local -r message="$1"

    ( >&2 echo "$mnemonic: $message" )
}

function abort()
{
    if [[ "$#" -gt 0 ]]; then
        local -r message="$1"

        error "$message, aborting"
    fi

    exit 1
}

function display_help_text()
{
    echo "NAME"
    echo "    $mnemonic - Add a SSH connection."
    echo "SYNOPSIS"
    echo "    $mnemonic --help"
    echo "    $mnemonic --version"
    echo "    $mnemonic --name <name> --ip-address <address> --key-comment <comment>"
    echo "    $mnemonic --name-prefix <prefix> --ip-address <address>"
    echo "        --key-comment <comment>"
    echo "OPTIONS"
    echo "    --help"
    echo "        Display this help text."
    echo "    --ip-address <address>"
    echo "        Specify the remote host's IP address."
    echo "    --key-comment <comment>"
    echo "        Specify the connection's SSH key comment."
    echo "    --name <name>"
    echo "        Specify the remote host's name."
    echo "    --name-prefix <prefix>"
    echo "        Specify the remote host's name prefix."
    echo "    --version"
    echo "        Display the version of this script."
    echo "EXAMPLES"
    echo "    $mnemonic --help"
    echo "    $mnemonic --version"
    echo "    $mnemonic --name foo --ip-address 192.168.56.2 --key-comment bar"
    echo "    $mnemonic --name-prefix foo --ip-address 192.168.56.2 --key-comment bar"
}

function display_version()
{
    echo "$mnemonic, version $version"
}

function main()
{
    local -r script=$( readlink -f "$0" )
    local -r mnemonic=$( basename "$script" )
    local -r repository=$( dirname "$script" )
    local -r version=$( git -C "$repository" describe --always --dirty --broken )

    while [[ "$#" -gt 0 ]]; do
        local argument="$1"; shift

        case "$argument" in
            --help)
                display_help_text
                exit
                ;;
            --version)
                display_version
                exit
                ;;
            --ip-address)
                if [[ -n "$ip_address" ]]; then
                    abort "remote host IP address already specified"
                fi

                if [[ "$#" -le 0 ]]; then
                    abort "remote host IP address not specified"
                fi

                local -r ip_address="$1"; shift
                ;;
            --key-comment)
                if [[ -n "$key_comment" ]]; then
                    abort "connection SSH key comment already specified"
                fi

                if [[ "$#" -le 0 ]]; then
                    abort "connection SSH key comment not specified"
                fi

                local -r key_comment="$1"; shift
                ;;
            --name)
                if [[ -n "$name" ]]; then
                    abort "remote host name / name prefix already specified"
                fi

                if [[ "$#" -le 0 ]]; then
                    abort "remote host name not specified"
                fi

                local -r name="$1"; shift
                ;;
            --name-prefix)
                if [[ -n "$name" ]]; then
                    abort "remote host name / name prefix already specified"
                fi

                if [[ "$#" -le 0 ]]; then
                    abort "remote host name prefix not specified"
                fi

                local -r name="$1-$version"; shift
                ;;
            --*)
                ;&
            -*)
                abort "'$argument' is not a supported option"
                ;;
            *)
                abort "'$argument' is not a valid argument"
                ;;
        esac
    done

    if [[ -z "$ip_address" ]]; then
        abort "'--ip-address' must be specified"
    fi

    if [[ -z "$key_comment" ]]; then
        abort "'--key-comment' must be specified"
    fi

    if [[ -z "$name" ]]; then
        abort "'--name' or '--name-prefix' must be specified"
    fi
}

main "$@"
